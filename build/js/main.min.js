/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/initWay.js":
/*!***********************!*\
  !*** ./js/initWay.js ***!
  \***********************/
/*! exports provided: initWay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initWay", function() { return initWay; });
var selectAB = document.querySelector('#timeAB');
var selectBA = document.querySelector('#timeBA');
var route = document.querySelector('#route');
var num = document.querySelector('#num');
var btn = document.querySelector('#btn');
var time = document.querySelector('#time');
var submit = document.querySelector('#submit');
var times = document.querySelectorAll('.time');
var differenceTimeZone = -new Date().getTimezoneOffset() / 60 - 3;
var duration = 50;
var price, value, departure, h, m, arrival, date, dateArrival;
if (times) {
  times.forEach(function (item) {
    item.textContent = new Date(new Date(item.value).setHours(new Date(item.value).getHours() + differenceTimeZone)).getHours() + ":" + (new Date(item.value).getMinutes() < 10 ? '0' : '') + new Date(item.value).getMinutes();
  });
}
var initWay = function initWay() {
  if (route) {
    if (route.value == "AB" || route.value == "BA") {
      price = 700;
    } else price = 1200;
    var labelAB = document.createElement('label');
    labelAB.textContent = "из A в B ";
    labelAB.setAttribute("for", "timeAB");
    var labelBA = document.createElement('label');
    labelBA.textContent = "из B в A ";
    labelBA.setAttribute("for", "timeBA");
    var handlerSelectAB = function handlerSelectAB() {
      if (Date.parse(selectBA.value) < Date.parse(selectAB.value) + duration * 60000) {
        do {
          selectBA.options[0].remove();
        } while (Date.parse(selectBA.value) < Date.parse(selectAB.value) + duration * 60000);
      }
      ;
    };
    route.addEventListener('change', function () {
      if (route.value == 'AB') {
        selectBA.style.display = "none";
        selectAB.style.display = "inline-block";
        time.style.display = "inline";
        submit.style.display = "inline";
        labelAB.remove();
        labelBA.remove();
      } else if (route.value == 'BA') {
        selectAB.style.display = "none";
        selectBA.style.display = "inline-block";
        time.style.display = "inline";
        submit.style.display = "inline";
        labelAB.remove();
        labelBA.remove();
      } else if (route.value == 'ABA') {
        selectAB.parentElement.insertBefore(labelAB, selectAB);
        selectBA.parentElement.insertBefore(labelBA, selectBA);
        selectBA.style.display = "inline-block";
        selectAB.style.display = "inline-block";
        time.style.display = "inline";
        submit.style.display = "inline";
        handlerSelectAB();
        selectAB.addEventListener('change', function () {
          handlerSelectAB();
        });
      } else {
        selectBA.style.display = "none";
        selectAB.style.display = "none";
        time.style.display = "none";
        submit.style.display = "none";
        labelAB.remove();
        labelBA.remove();
      }
    });
    btn.addEventListener('click', function () {
      if (!num.value) {
        alert('укажите кол-во билетов');
        return;
      }
      if (route.value == "AB" || route.value == "BA") {
        price = 700;
      } else {
        price = 1200;
      }
      if (route.value == "AB" || route.value == "ABA") {
        value = selectAB.options[selectAB.selectedIndex].value;
      } else if (route.value == "BA") {
        value = selectBA.options[selectBA.selectedIndex].value;
      }
      date = new Date(value);
      h = new Date(date.setHours(date.getHours() + differenceTimeZone)).getHours();
      m = (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();
      departure = h + ":" + m;
      dateArrival = new Date(date.setMinutes(date.getMinutes() + duration));
      if (route.value == "ABA") {
        var valueBA = selectBA.options[selectBA.selectedIndex].value;
        var upM = new Date(new Date(valueBA).setMinutes(new Date(valueBA).getMinutes() + duration));
        dateArrival = new Date(new Date(upM).setHours(new Date(upM).getHours() + differenceTimeZone));
      }
      var newDuration = (dateArrival - new Date(new Date(value).setHours(new Date(value).getHours() + differenceTimeZone))) / 60000;
      arrival = dateArrival.getHours() + ":" + (dateArrival.getMinutes() < 10 ? '0' : '') + dateArrival.getMinutes();
      alert('Вы выбрали ' + num.value + (num.value % 10 == 1 ? ' билет' : num.value % 10 > 1 && num.value % 10 < 5 ? ' билета' : ' билетов') + ' по маршруту ' + route.options[route.selectedIndex].text + ' стоимостью ' + price * num.value + 'р.\n' + 'Это путешествие займет у вас ' + (route.value == "ABA" ? newDuration : duration) + ' минут. \n' + 'Теплоход отправляется в ' + departure + ', а прибудет в ' + arrival);
    });
  }
};


/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _initWay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./initWay */ "./js/initWay.js");
/* harmony import */ var _more__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./more */ "./js/more.js");


window.addEventListener('DOMContentLoaded', function () {
  Object(_more__WEBPACK_IMPORTED_MODULE_1__["initMore"])();
  Object(_initWay__WEBPACK_IMPORTED_MODULE_0__["initWay"])();
});

/***/ }),

/***/ "./js/more.js":
/*!********************!*\
  !*** ./js/more.js ***!
  \********************/
/*! exports provided: initMore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMore", function() { return initMore; });
var list = document.querySelector('.event-card__timing-list');
var li = document.querySelector('.event-card__feature--timing');
var text = document.querySelector('.event-card__feature-wrapper');
var more = document.querySelector('.event-card__timing-item--more');
var initMore = function initMore() {
  if (list) {
    var list2 = list.cloneNode(true);
    var addMore = function addMore(node) {
      if (window.innerWidth >= 768 && node.offsetWidth > li.offsetWidth - text.offsetWidth) {
        do {
          node.lastElementChild.remove();
          node.lastElementChild.remove();
          node.appendChild(more);
          more.classList.remove('visually-hidden');
        } while (node.offsetWidth > li.offsetWidth - text.offsetWidth);
      } else if (node.offsetWidth > li.offsetWidth && window.innerWidth < 768) {
        do {
          node.lastElementChild.remove();
          node.lastElementChild.remove();
          node.appendChild(more);
          more.classList.remove('visually-hidden');
        } while (node.offsetWidth > li.offsetWidth);
      }
    };
    more.addEventListener('click', function () {
      more.remove();
      list.remove();
      li.appendChild(list2);
      list2.classList.add('event-card__timing-list--open');
    });
    addMore(list);
    window.addEventListener('resize', function () {
      addMore(list);
    });
  }
};


/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map